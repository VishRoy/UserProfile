{"version":3,"sources":["store/userProfileReducer.js","store/rootReducer.js","store/actionTypes.js","service/userProfileService.js","store/userProfileSaga.js","store/rootSaga.js","store/configureStore.js","components/Loader.js","components/SortBy.js","components/Users.js","components/Home.js","store/userProfileAction.js","components/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["initialState","combineReducers","userProfileReducer","state","action","type","loading","usersList","payload","undefined","userDetails","HttpService","Axios","create","baseURL","timeout","fetchAllUsers","queryParams","a","get","response","err","fetchUser","fetchAllUsersWatcherAsyn","fetchUserWatcherAsyn","userProfileWatcher","value","call","status","data","put","all","takeEvery","userProfileSaga","rootSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","run","Loader","style","display","justifyContent","alignItems","height","flexDirection","Spinner","animation","variant","className","SortBy","setSort","Fragment","DropdownButton","onSelect","e","title","marginBottom","Dropdown","Item","eventKey","Users","tempArr","useState","tempList","setTempList","sort","useEffect","b","last_name","toLowerCase","first_name","flexWrap","map","item","to","id","key","padding","Card","border","width","text","Img","src","avatar","alt","Body","Title","Text","email","connect","dispatch","query","loadAllUsers","loadUser","userId","useParams","marginTop","Header","App","exact","path","component","Home","UserProfile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a250497f.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nconst initialState = {};\n\nexport default function userProfileReducer(state=initialState, action) {\n    switch (action.type) {\n      case actionTypes.LOAD_ALL_USERS:\n        return {...state, loading: true};\n      case actionTypes.LOAD_ALL_USERS_COMPLETE:\n        return {...state, loading: false, usersList: action.payload};\n      case actionTypes.LOAD_ALL_USERS_ERROR:\n        return {...state, loading: false, usersList: undefined};\n  \n      case actionTypes.LOAD_USER:\n        return {...state, loading: true};\n      case actionTypes.LOAD_USER_COMPLETE:\n        return {...state, loading: false, userDetails: action.payload};\n      case actionTypes.LOAD_USER_ERROR:\n        return {...state, loading: false, userDetails: undefined}; \n\n      // case actionTypes.LOAD_USER:\n      //   return {...state, loading: true};\n      // case actionTypes.LOAD_USER_COMPLETE:\n      //   return {...state, loading: false, userDetails: action.payload};\n      // case actionTypes.LOAD_USER_ERROR:\n      //   return {...state, loading: false, userDetails: undefined}; \n  \n      default:\n        return state;\n    }\n  }","import {combineReducers} from 'redux';\n\nimport userProfileReducer from './userProfileReducer';\n\nexport default combineReducers({\n    userProfileReducer,\n});\n","export const LOAD_ALL_USERS = \"LOAD_ALL_USERS\";\nexport const LOAD_ALL_USERS_COMPLETE = \"LOAD_ALL_USERS_COMPLETE\";\nexport const LOAD_ALL_USERS_ERROR = \"LOAD_ALL_USERS_ERROR\";\n\nexport const LOAD_USER = \"LOAD_USER\";\nexport const LOAD_USER_COMPLETE = \"LOAD_USER_COMPLETE\";\nexport const LOAD_USER_ERROR = \"LOAD_USER_ERROR\";","import Axios from 'axios';\n\nexport const HttpService = Axios.create({\n    baseURL: 'https://reqres.in/api/users',\n    timeout: 10000,\n  });\n\n\nexport async function fetchAllUsers(queryParams) {\n    try {\n      const response = await HttpService.get(queryParams);\n      return response;\n    } catch (err) {\n      return {err};\n    }\n  }\n  \nexport async function fetchUser(queryParams) {\n    try {\n      const response = await HttpService.get(queryParams);\n      return response;\n    } catch (err) {\n      return {err};\n    }\n}\n  ","import {put, takeEvery, all, call} from \"redux-saga/effects\";\nimport * as actionTypes from \"./actionTypes\";\nimport {fetchAllUsers, fetchUser} from \"../service/userProfileService\";\n\nexport function* fetchAllUsersWatcherAsyn(value) {\n  try {\n    const response = yield call(fetchAllUsers, value.payload);\n    if (response.status >= 200 && response.status < 300) {\n      const usersList = yield response.data;\n      yield put({type: actionTypes.LOAD_ALL_USERS_COMPLETE, payload: usersList});\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    yield put({type: actionTypes.LOAD_ALL_USERS_ERROR, payload: error});\n  }\n}\n\nexport function* fetchUserWatcherAsyn(value) {\n  try {\n    const response = yield call(fetchUser, value.payload);\n    if (response.status >= 200 && response.status < 300) {\n      const userDetails = yield response.data;\n      yield put({type: actionTypes.LOAD_USER_COMPLETE, payload: userDetails});\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    yield put({type: actionTypes.LOAD_USER_ERROR, payload: error});\n  }\n}\n\n\nexport function* userProfileWatcher() {\n  yield all([\n    takeEvery(actionTypes.LOAD_ALL_USERS, fetchAllUsersWatcherAsyn),\n    takeEvery(actionTypes.LOAD_USER, fetchUserWatcherAsyn),\n  ]);\n}\n\n\nexport const userProfileSaga = [\n    userProfileWatcher(),\n];\n\n","import {all} from 'redux-saga/effects';\nimport {userProfileSaga} from './userProfileSaga';\n\nexport default function* rootSaga() {\n  yield all([...userProfileSaga]);\n}","import createSagaMiddleware from \"redux-saga\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware=createSagaMiddleware();\nconst composeEnhancers = compose;\n\nconst store=createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(sagaMiddleware),\n    ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Loader = () => {\n  return (\n    <>\n      <div style={{display:'flex', justifyContent:'center', alignItems:'center', height: '600px', flexDirection:'column'}}>\n        <h2>Loading</h2>\n        <Spinner animation=\"border\" variant=\"primary\" >\n          <span className=\"sr-only\">Loading</span>\n        </Spinner>\n      </div>\n    </>\n  );\n};\nexport default Loader;","import React from 'react';\nimport {Dropdown,DropdownButton} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SortBy = ({setSort}) => {\n    return (\n        <React.Fragment>\n                <DropdownButton onSelect={(e)=>setSort(e)} title=\"Sort By\" style={{marginBottom: '2rem'}}>\n                    <Dropdown.Item eventKey=\"option-1\">First Name</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"option-2\">Last Name</Dropdown.Item>\n                </DropdownButton>\n        </React.Fragment>\n    );\n};\nexport default SortBy;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport SortBy from './SortBy';\n\nconst Users = ({ usersList }) => {\n\n    const [tempList, setTempList] = useState(usersList.data)\n    const [sort,setSort] = useState()\n    let tempArr;\n\n    useEffect(()=>{  \n        if(sort === \"option-1\"){\n            tempArr = tempList?.sort((a,b)=> (a.last_name.toLowerCase() > b.last_name.toLowerCase() ? 1 : -1));\n        }else{\n            tempArr = tempList?.sort((a,b)=> (a.first_name.toLowerCase() > b.first_name.toLowerCase() ? 1 : -1));\n        }\n        setTempList(tempArr)\n    },[sort])\n\n    return (\n        <React.Fragment>\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection:'column'}}>\n                <h2>Users</h2>\n                <SortBy setSort={setSort}/>\n                <div style={{display:'flex', flexWrap:'wrap'}}>{tempList.map((item) => {\n                    return (<Link to={`/user/${item.id}`} key={item.id}>\n                        <div style={{padding: 20}}>\n                            <Card border='secondary' style={{ width: '15rem' }} text={'secondary'}>\n                            <Card.Img variant=\"top\" src={item.avatar} alt=\"Avatar\" />\n                            <Card.Body>\n                                <Card.Title>{item?.first_name} {item?.last_name}</Card.Title>\n                                <Card.Text>{item?.email}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                        </div>\n                    </Link>)\n                })}</div>\n            </div>\n        </React.Fragment>\n    );\n};\nexport default Users;","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport { loadAllUsers } from '../store/userProfileAction';\nimport Loader from './Loader';\nimport Users from './Users';\n\nexport const mapStateToProps = (state) => ({\n    usersList: state.userProfileReducer.usersList\n});\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        fetchAllUsers: (query) => dispatch(loadAllUsers(query))\n    }\n};\n\nconst Home = ({ fetchAllUsers, usersList }) => {\n    useEffect(() => {\n        fetchAllUsers('?delay=3')\n    }, [])\n\n    return (\n        <React.Fragment>\n            {usersList !== undefined && usersList.data ? <Users usersList={usersList} /> : <Loader /> }\n        </React.Fragment>\n    );\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as actionTypes from './actionTypes';\n\nexport const loadAllUsers=(query)=>{\n    return {\n      type: actionTypes.LOAD_ALL_USERS,\n      payload: query,\n    };\n  };\n  \n  export const loadUser=(query)=>{\n    return {\n      type: actionTypes.LOAD_USER,\n      payload: query,\n    };\n  };","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { loadUser } from '../store/userProfileAction';\nimport {Card} from 'react-bootstrap';\n\nexport const mapStateToProps = (state) => ({\n    userDetails: state.userProfileReducer.userDetails\n});\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUser: (query) => dispatch(loadUser(query))\n    }\n};\n\nconst UserProfile = ({ fetchUser, userDetails }) => {\n    const { id } = useParams();\n    const userId = id;\n\n    useEffect(() => {\n        fetchUser(`${userId}`)\n    }, [userId])\n\n    return (\n        <React.Fragment>\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '2rem' }}>\n                <Card style={{ width: '30rem' , display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <Card.Header>{userDetails?.data?.first_name} {userDetails?.data?.last_name}</Card.Header>\n                    <Card.Body>\n                        <Card.Img src={userDetails?.data?.avatar} style={{ width: '15rem' }} />\n                        <Card.Text>First Name : {userDetails?.data?.first_name} </Card.Text>\n                        <Card.Text>Last Name : {userDetails?.data?.last_name}</Card.Text>\n                        <Card.Text>Email : {userDetails?.data?.email}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </React.Fragment>\n    );\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport { Route, BrowserRouter} from 'react-router-dom';\n\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n        <Route exact path = '/' component={Home} />\n        <Route path='/user/:id' component={UserProfile} />\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}